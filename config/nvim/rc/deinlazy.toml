[[plugins]]
repo = 'vim-denops/denops.vim'
on_event = 'CursorHold'
hook_source = '''
  " NOTE: for profile
  "let g:denops#server#deno_args = [
  "    \ '-q',
  "    \ '--no-check',
  "    \ '--unstable',
  "    \ '-A',
  "    \ '--inspect',
  "    \ ]

  " Use background server
  "if has('nvim')
  "  call jobstart([
  "  \   'deno', 'run', '-A', '--no-check',
  "  \   g:dein#plugin.path . '/denops/@denops-private/cli.ts',
  "  \ ], {'detach': v:true})
  "else
  "  call job_start([
  "  \   'deno', 'run', '-A', '--no-check',
  "  \   g:dein#plugin.path . '/denops/@denops-private/cli.ts',
  "  \ ], {'stoponexit': ''})
  "endif
  "let g:denops_server_addr = '127.0.0.1:32123'
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'
hook_source = '''
  let g:context_filetype#ignore_patterns = {
      \ 'toml': ['^\s*#\s*'],
      \ }
'''

[[plugins]]
repo = 'Shougo/vinarise.vim'
on_cmd = 'Vinarise'
hook_add = '''
  let g:vinarise_enable_auto_detect = v:true
  let g:vinarise_guifont = 'Courier\ 10\ Pitch:h14'
'''

[[plugins]]
repo = 'Shougo/ddx.vim'

[[plugins]]
repo = 'Shougo/ddx-commands.vim'
depends = 'ddx.vim'
on_cmd = 'Ddx'

[[plugins]]
repo = 'kana/vim-niceblock'
on_map = {x = '<Plug>'}
hook_add = '''
  xmap I  <Plug>(niceblock-I)
  xmap A  <Plug>(niceblock-A)
'''

[[plugins]]
repo = 'thinca/vim-qfreplace'
on_ft = ['qf']
[plugins.ftplugin]
qf = '''
  nnoremap <buffer> r <Cmd>Qfreplace<CR>
'''

[[plugins]]
repo = 'tyru/open-browser.vim'

[[plugins]]
repo = 'rhysd/vim-operator-surround'
depends = 'vim-operator-user'
on_map = {n = '<Plug>'}
hook_add = '''
  nmap <silent>sa <Plug>(operator-surround-append)
  nmap <silent>sd <Plug>(operator-surround-delete)a
  nmap <silent>sr <Plug>(operator-surround-replace)a
  nmap <silent>sc <Plug>(operator-surround-replace)a
'''

[[plugins]]
repo = 'kannokanno/previm'
on_cmd = 'PrevimOpen'
depends = 'open-browser.vim'

[[plugins]]
repo = 'osyo-manga/vim-jplus'
on_map = {n = '<Plug>'}
hook_add = '''
  nmap J <Plug>(jplus)
'''

# [[plugins]]
# repo = 'katono/rogue.vim'

[[plugins]]
repo = 'lambdalisue/vim-findent'

[[plugins]]
repo = 'tweekmonster/helpful.vim'
on_cmd = 'HelpfulVersion'

[[plugins]]
repo = 'rhysd/vim-gfm-syntax'
on_ft = 'markdown'

[[plugins]]
repo = 'machakann/vim-vimhelplint'
on_ft = 'help'
[plugins.ftplugin]
help = '''
  nnoremap <silent><buffer> ,r  <Cmd>VimhelpLint!<CR>
'''

[[plugins]]
repo = 'mattn/vim-goimports'
on_ft = 'go'
hook_source = '''
  let g:goimports_simplify = v:true
'''

[[plugins]]
repo = 'dag/vim2hs'
on_ft = 'haskell'
hook_source = '''
  let g:haskell_conceal = v:false
'''

[[plugins]]
repo = 'hrsh7th/vim-eft'
hook_source = '''
  let g:eft_ignorecase = v:true
'''
hook_add = '''
  nmap ;; <Plug>(eft-repeat)
  xmap ;; <Plug>(eft-repeat)

  nmap f <Plug>(eft-f)
  xmap f <Plug>(eft-f)
  omap f <Plug>(eft-f)
'''
on_map = {n = '<Plug>', x = '<Plug>', o = '<Plug>'}

#[[plugins]]
#repo = 'teal-language/vim-teal'
#on_ft = 'teal'

[[plugins]]
repo = 'joker1007/vim-markdown-quote-syntax'
on_ft = 'markdown'

[[plugins]]
repo = 'github/copilot.vim'
on_cmd = 'Copilot'
hook_source = '''
  let g:copilot_enabled = v:false
  let g:copilot_no_maps = v:true
  let g:copilot_node_command = '/snap/bin/node'
  let g:copilot_hide_during_completion = 0
  imap <script><silent><nowait><expr> <C-g> copilot#Accept()
'''

[[plugins]]
repo = 'Shougo/qselect.vim'

[[plugins]]
repo = 'skanehira/denops-silicon.vim'

[[plugins]]
repo = '4513ECHO/vim-readme-viewer'
on_source = ['ddu.vim']
hook_add = '''
  let g:readme_viewer#plugin_manager = 'dein.vim'
  nnoremap <silent> sr <Cmd>Ddu readme_viewer<CR>
'''
on_cmd = 'DeinOpen'
